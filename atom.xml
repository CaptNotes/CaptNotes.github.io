<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>机长梦话</title>
  
  <subtitle>不会拍电影的程序员不是好机长</subtitle>
  <link href="https://captnotes.github.io/atom.xml" rel="self"/>
  
  <link href="https://captnotes.github.io/"/>
  <updated>2023-10-16T08:01:43.778Z</updated>
  <id>https://captnotes.github.io/</id>
  
  <author>
    <name>麦机长</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>痴 - 创业十忌</title>
    <link href="https://captnotes.github.io/obsession-ttos/"/>
    <id>https://captnotes.github.io/obsession-ttos/</id>
    <published>2023-10-17T14:00:00.000Z</published>
    <updated>2023-10-16T08:01:43.778Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_obsession_ttos.jpg" alt="痴 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>痴：痴迷。</p></blockquote><p>虽然专注是创业者必备的优良品质，但我建议要区分痴迷与专注。开门见山地说，我不看好把个人痴迷当作市场需求的创业动机。</p><p>李嘉诚曾说，不要和业务谈恋爱。也即是说，创业者可以爱上如何打磨自己的创业方法论，至于当前做什么业务，主要取决于市场需求。假若市场需求发生了巨大变化，迅速转手旧有业务，切入新的赛道，只要方法论是高效的，依然可以很快取得成绩。</p><p>但是在过往的经历中，我也耳濡目染很多用个人痴迷程度替代市场调查的失败案例。为什么说这样做很危险呢，你想想自己最痴迷的东西，会不会很容易认为许多人都会喜欢，甚至无法理解其他人为什么不会动心？所以，当我们仅仅从痴迷的角度去看待一件事物的时候，往往容易夸大其市场需求，给自己太多浪漫的错误信号，从而认定这是一条必然一帆风顺的赛道。</p><p>或许有的朋友会问，做自己不喜欢的东西，怎么能扛得住创业道路上的各种艰辛与风险呢？如前所述，创业者真正应该爱上的，是自己的创业方法论。如果把自己的创业基本功打磨扎实，有一天会突然意识到，自己的团队具体做什么业务似乎已经不那么重要了，无非是顺应市场、赚取属于自己的那份酬劳。然而看着自己的创业方法论攻下一个又一个迥异的山头，这份成就感更加安全可靠。</p><p>话说回来，即使自己喜欢的正好也是市场需求很大的，谁又能保证这块市场永远繁荣呢。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_obsession_ttos.jpg&quot; alt=&quot;痴 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;痴：痴迷。&lt;/p&gt;
&lt;/blo</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>妄 - 创业十忌</title>
    <link href="https://captnotes.github.io/conceit-ttos/"/>
    <id>https://captnotes.github.io/conceit-ttos/</id>
    <published>2023-10-16T13:45:00.000Z</published>
    <updated>2023-10-16T02:30:02.008Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_conceit_ttos.jpg" alt="妄 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>妄：狂妄、自大。</p></blockquote><p>要说哪种性格的创业者造成的破坏，其爆发力最强，以我的经验，是那些不想知道天高地厚的妄人。</p><p>创业是一个循序渐进的过程，处在什么阶段就做什么阶段的事。每一个阶段都有所突破，一步一步地把团队做起来。</p><p>然而秉性狂妄的人，喜欢还没学会爬就要学会飞。比如，苹果的生产订单可以一次一百万部 iPhone，如果是一家尚不知名的硬件公司做的一款小众又小贵硬件产品，一次生产几万个，会不会很冒险呢？当然会，我就遇到过因为狂妄，不考虑市场容量也不考虑财务状况，只想着要迅速做大做强，生产订单迅速掏空公司现金储备、产品滞销多年，从而一蹶不振的公司。</p><p>同样的例子我经历过不止一次。可见，狂妄并不是一个很生僻的案例，尤其是在热钱好拿的时期，更是容易催生一些人内心的躁动。</p><p>狂妄的创业者嫌市场调研太保守、小步试错太磨叽，只想一做什么就直接登上榜首，喜欢聚光灯、渴望荣耀……实际上这些都是在给自己挖坑，在某一个临界时刻带领团队一头栽进去，再难起来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_conceit_ttos.jpg&quot; alt=&quot;妄 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;妄：狂妄、自大。&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>名 - 创业十忌</title>
    <link href="https://captnotes.github.io/reputation-ttos/"/>
    <id>https://captnotes.github.io/reputation-ttos/</id>
    <published>2023-10-15T16:15:00.000Z</published>
    <updated>2023-10-16T01:50:41.943Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_reputation_ttos.jpg" alt="名 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>名：名气、名望、头衔。</p></blockquote><p>名声是绝大多数创业者都很珍视的羽毛，但从主次的角度来讲，我认为这只是奋斗历程的副产品，而不应该当作是主要目标。</p><p>一位我曾经合作过的创业者，有着强烈的学术情怀，生意做得要死不活，却很喜欢给自己网罗一些学术头衔。然而，当公司到了欠薪裁员的地步，这些头衔没有一个起到什么作用。</p><p>创业者首先应该把精力用于解决生存问题，然后再是提升抗风险能力，这是创业活动得以持续的本质问题，其它都是外在形式。</p><p>过分地追求名声，犹如写文章时喜欢堆砌辞藻一样矫揉造作，事情不一定说得清楚，却总想给人一种学识渊博、厚积薄发的印象，其实恰恰容易适得其反。很多人揣着明白装菜鸟，表面奉承，背后提防。然而这些头衔爱好者往往容易陷入自恋的幻想当中，逐渐以为自己就是那个天选之人，从而在本职工作上浮躁轻敌。</p><p>名声不是不该有，但要注重质量和数量，德不配位必将重摔。与自己当前阶段匹配的名声能够很好地佐证自己的实力，沽名钓誉则等同于玩物丧志。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_reputation_ttos.jpg&quot; alt=&quot;名 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;名：名气、名望、头衔。&lt;/p</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>淫 - 创业十忌</title>
    <link href="https://captnotes.github.io/lust-ttos/"/>
    <id>https://captnotes.github.io/lust-ttos/</id>
    <published>2023-10-13T19:44:00.000Z</published>
    <updated>2023-10-16T01:50:32.554Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_lust_ttos.jpg" alt="淫 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>淫：邪淫。</p></blockquote><p>人有七情六欲不足为怪，食色性也人之常情。但是在枯燥和艰难的创业道路上，管理好个人的私欲，尤其是在需要发泄情绪、舒缓压力或者犒赏自己时，还能坚守底线，才能被视为拥有强大的内心。</p><p>我不想炒那些知名人士的冷饭，也不愿对别人的事情指指点点，更不希望被误会把失败甩锅给女性群体。索性跳过狗血的细节、放下道德的批判，仅从创业者的角度来聊聊这类事情的影响吧。</p><p>创业者通常都会为自己树立一个人设，通常是睿智、豁达、开明、谦逊、博学、担当，做不做得到不重要，不过是张名片罢了。也有个别的会用神童、状元、高知一类的称号来力求鹤立鸡群，有多少水分暂且不论，无非是想找点儿背书而已。蝇营狗苟，司空见惯。不论怎么打造形象，目前我还没看到谁是主打个贪财、好色、虚伪、薄情、寡义的，毕竟三岁的孩子都知道这些是不好的。</p><p>正因为如此，那些蠢蠢欲动的私欲，对于随时要在聚光灯下争名逐利者而言，显得格外拿不上台面。</p><p>当然不能指望没有道德瑕疵的完人才能去创业，我也不赞成设立“劣迹创业者”来阻挡任何人实现梦想。精力过于旺盛、欲望相当强烈的人，学会分清轻重缓急尤为重要。融资期遇小三逼宫，慌乱间解散工作群；也有嘴脸太过渣男，被人铭刻在互联网记忆里……这些事，对内影响团队氛围和信任，对外又是尽职调查的巨大隐患。可以说，为了满足两分钟的欲望，很可能造成今后至少两年的挫败。</p><p>也可以把这看作是一种淘汰机制，过滤掉那些表面阳光、内心阴暗的人。但我写这篇文章，主要是想给像我这样，既不特别好也不特别坏、想坏不敢太坏、想好做不到太好的人一点儿启发，坚持自己的三观，盛世勤积德，逆境多读书。不要一有点儿阶段性的胜利就得意忘形，觉得自己可以变坏了。</p><p>路还长！套用曾经的一篇奇葩文章的标题——创业者要管好三巴。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_lust_ttos.jpg&quot; alt=&quot;淫 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;淫：邪淫。&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>嗔 - 创业十忌</title>
    <link href="https://captnotes.github.io/anger-ttos/"/>
    <id>https://captnotes.github.io/anger-ttos/</id>
    <published>2023-06-01T21:48:02.000Z</published>
    <updated>2023-10-16T01:50:11.496Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_anger_ttos.jpg" alt="嗔 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>嗔：嗔怒、嗔诟、嗔责。</p></blockquote><p>很多创始人通常会有两副面孔，一副用来面对投资人、大客户，一幅则是面对员工跟合作伙伴的。而一个人的领袖魅力恰恰与这两幅面孔的反差程度成反比。</p><p>职场上充斥着“演员”，每个人都在极力塑造自认为更符合角色要求的形象。从微观上感受，就是喜欢和不喜欢、服与不服的区别；而从宏观上来看，似乎总显得太多自由发挥、缺少了些章法。行情走高的时候还则罢了，退潮过后，才能看出谁是随波逐流，谁才是真有两把刷子。</p><p>创立一番事业，需要内心有一番按耐不住的冲动，然而心中有冲动的人，也容易比较情绪化。情绪化又是一把伤人的利器，这其中如何平衡以取得好的心态，似乎是很矛盾的，值得探讨。</p><p>为什么情绪化容易伤人，因为情绪化输出的往往只有焦虑和指责，对于解决问题毫无裨益。举个例子，因为某个细节问题，团队掉坑，进度不如预期的乐观。创始人开始不耐烦了，一边催促尽快搞定，一边对参与的同事评头论足、指手画脚，背地里琢磨如何把这些人优（pái）化（jǐ）掉，找个会念经的外来和尚取而代之。而这样的创始人很容易就陷进死循环出不来，直到黄摊儿，复盘便是：都怪尔等误朕。</p><p>不少团队就像流水席一样，没什么“老人”。这样的队伍其实是没什么战斗力的，只不过钱还没烧完而已。把观众当傻子的导演拍不出好看的作品，把员工当傻子的创始人也做不出像样的企业。</p><p>前些年流行一个说法：和相亲对象吃饭，不要只看他如何对你，关键要看他如何对待服务员。同样的，创始人能够在事业上和你一起走多远，不要只看他在金主面前是不是知书达理的小绵羊，还要看他在员工面前是否是凶神恶煞的大灰狼。</p><p>有的人会说：当领导的怎么可以没有威严，和下属平起平坐那还了得？这就要看对“威严”如何定义了，威严既可以来自脾气大、嗓门粗，也可以来自扎实的专业功底和过人的远见卓识。</p><p>凡事都做好预案，为不确定因素预留出缓冲空间，才能保持相对积极乐观的心态。如果你想通过创新在市场上立足，那就不能天真地指望所有人不犯错，更不要做不到表率全靠“气场”来推进。</p><p>很多人输在，越走越没人愿意和他一起走。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_anger_ttos.jpg&quot; alt=&quot;嗔 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嗔：嗔怒、嗔诟、嗔责。&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>纪念左耳朵耗子（陈皓）</title>
    <link href="https://captnotes.github.io/rip-haoel/"/>
    <id>https://captnotes.github.io/rip-haoel/</id>
    <published>2023-05-15T17:53:47.000Z</published>
    <updated>2023-08-01T16:07:26.067Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_rip_hao_chen.jpg" alt=""></p><p>刚刚看到一条消息，非常突然！</p><p><img src="../images/illustration_rip_haoel_01.jpg" alt=""></p><p>就在几天前的 5 月 10 号，耗哥和我还在微信上聊了四十多分钟视频，没想到 13 号晚上人就没了。刚看到这个消息，以为是在恶搞，但是冷静下来一番查证，基本属实了。</p><p>5 月 8 号，我读了他最新发表的<a href="https://coolshell.cn/articles/22422.html">《是微服务架构不香还是云不香》</a>，通过邮件联系了他，毕竟 Serverless 也是我现在特别关注的领域。他回复约我视频沟通，这才有了 10 号的机缘。</p><p>我看到技术圈中一些他生前的朋友纷纷惋惜，也有懊悔拖延了与他见面的。我很庆幸当时读了文章有想法就立即实施，而没有拖着“过阵子再说”，要不然也没有“以后”了。</p><p><img src="../images/illustration_rip_haoel_02.jpg" alt=""></p><p>这条推文就是耗哥和我聊到过往工作经历后的有感而发，也算是对晚辈的一份劝诫吧。我也认为卖惨式的“奋斗”并不能打动市场，顶多显得失败并不是因为“懒惰”。然而，即便是注重作息的耗哥，竟然也以这样突然的方式离开了。</p><p>这远不是第一起程序员猝死，也不会是最后一起。各行各业，有梦想的人，注定痛并快乐着！</p><p>希望包括我在内的所有朋友，多注意身体健康，无效的竞争有害无益，行业内卷犹如杀人的刀。活着，才能见证奇迹！</p><p>最后，希望耗哥回首往事，欣慰没有辜负自己的梦想！安息！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_rip_hao_chen.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;刚刚看到一条消息，非常突然！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/illustration_rip_haoel_01.jpg&quot; al</summary>
      
    
    
    
    <category term="杂文" scheme="https://captnotes.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>嫑以为天下为我独难</title>
    <link href="https://captnotes.github.io/never-contempt-the-effort-of-others/"/>
    <id>https://captnotes.github.io/never-contempt-the-effort-of-others/</id>
    <published>2023-05-11T21:21:26.000Z</published>
    <updated>2023-08-01T15:40:54.083Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_never_contempt_the_effort_of_others.jpg" alt=""></p><blockquote><p>不要习惯性地认为别人的事儿都很简单。你看着简单，可能你未必了解细节；你看着简单，可能你并没有经历“一万小时的训练”……这不仅仅是尊不尊重别人的问题，这更是了不了解自己的问题。</p></blockquote><p>我曾在朋友圈发过上面这段文字，引起了一些朋友的共鸣。今天我想再引申一下，把这个问题考虑得更透彻些。</p><p>任何人或组织想在充分竞争的市场中生存，都必须持续地提供有竞争力的产品或服务，轻松躺赚几无可能。但无论过程多么艰辛，结果往往看上去要简单许多，正是如此，很多人总觉得别人的活儿都不如自己的有技术含量。</p><p>表象的简单其实隐藏了很多复杂的细节，而要结果可靠，每一个细节都必须耗费大量的心血来打磨。能够快速透过表面预估主要的细节问题以及应对方案是高级技术人员应该掌握的基本技能。我有位前同事 A，他的口头禅是：“这个好说，5 分钟的事儿。”结果好几次任务都因为事先轻浮的判断而严重耽误进度。一开始我以为他真是个大拿，后来才发现，嘴比脑子快不算真的聪明，甚至是工程师的大忌。</p><p>错误地评估任务难度，会给协作进度带来极大困扰；低估别人的工作，则会让合作蒙上阴影。另一位前同事 B，比较专注，但有个特点，喜欢对别人的工作冠以“这个简单”、“那样没有意义”之类的评判，弄得大家很郁闷。我相信他是说者无心，但毕竟听者有意。真诚是一次性的，谁愿意和轻蔑自己的人掏心掏肺呢？如果双方是生意上的潜在合作伙伴，当一方听到另一方说自己的东西简单，要么认为是在为砍价做铺垫，要么反感对方假老练不识货。人为地增加不必要的猜忌与沟通成本，最终伤害的是彼此的现实利益。</p><p>有句话叫“逢人减寿、遇货添钱”。我不提倡过分的恭维，这对真正做事毫无裨益。但直率得不顾及对方感受，其实是自负的一种表现。有些人做上老板以后，喜欢先唱一句高调“聪明人不在乎面子”，然后可想而知，说的全是 PUA 那套，宽于律己严于律人，当你真正剖析他那一亩三分地儿，不过金玉其外、败絮其中罢了。</p><p>逞一时嘴瘾还不容易，当初嘲讽别人傻笨黑粗，如今还有脸对比一下彼此现状么？我始终认为，谦逊是自信和修养的一种体现。在这个分工协作的时代，每个人都有自己专长领域和能力边界，凤毛麟角的真正通才不太具备参考价值。职场上没有真正的笨人，我们怎么可以想当然地认为自己手头上的活儿只有自己能驾驭，别人根本干不了呢；反过来又觉得自己工作的难度被低估，别人的工作是个人就会。</p><p>带团队更是如此，鼓励远比打压有用得多，但很多管理者下意识地喜欢转嫁压力或者担心下属功高盖主，将问题归咎于别人啥都不会，把沟通看作是白嫖自己的宝贵经验。然后就是各种上不得台面的手段，逼走看不顺眼的朽木，寄希望于新来的嫩芽。大公司倒无所谓，小公司但凡这么折腾几次，元气必然大伤。建立并维护一个健康积极快乐的团队氛围需要大量的时间和心血，而摧毁士气分分钟就行。看一个管理者离开他现在的平台去闯荡时有多少人义无反顾地追随，就知道他是真正具备领导能力抑或是<a href="https://en.wikipedia.org/wiki/Laurence_J._Peter">劳伦斯·彼得</a>笔下那些德不配位的主儿了。</p><p>大方赞赏别人的付出并鼓励其不断取得新的成就，不会损伤自身利益和形象。优质的协作可以成倍提升工作效率，进而增加成功实现共同目标的可能。一味抬高自己贬损他人，就像一个不合群的齿轮，转得越快越难受。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_never_contempt_the_effort_of_others.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要习惯性地认为别人的事儿都很简单。你看着简单，可能你未必了解细节；你看着简单</summary>
      
    
    
    
    <category term="杂文" scheme="https://captnotes.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>《李嘉诚：成功没有偶然》摘要与心得</title>
    <link href="https://captnotes.github.io/li-ka-shing-no-coincidence-for-success/"/>
    <id>https://captnotes.github.io/li-ka-shing-no-coincidence-for-success/</id>
    <published>2023-04-25T21:43:05.000Z</published>
    <updated>2023-08-01T15:41:49.398Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_li_ka_shing.jpg" alt=""></p><blockquote><p>注：【】部分为笔者心得，非原文摘抄。</p></blockquote><ul><li>全力以赴是经营企业的基础。</li><li>要让员工与自己一同为企业付出百分之百的努力和热情，就要懂得善待员工，不能觉得他们只是自己花钱雇来的。</li><li>做老板，不但自己要勤奋，还要有脑子，懂得员工的心理，调动企业上下人员，共同为企业开创美好未来。</li><li>有不寻常的事发生时，立即想到赚钱，这是生意人应该具备的素质。</li><li>做生意有三种方式：一是创新、二是改进、三是跟风。</li><li>创造市场影响力是增加销售非常有效的途径。</li><li>商人一定要不断寻找新的或者未经开发的市场。</li><li>生意不是等来的，而是要靠敏锐的目光去发现。</li><li>比知识重要的是思维，比思维重要的是悟性。</li><li>士人第一要有志，第二要有识，第三要有恒。有志则断不甘为下流，有识则知学问无尽，有恒则断无不成之事。</li><li>任何时候都要在稳健中求发展，发展中保稳健。企业的管理很重要，高水平的管理才能带来高效益。</li><li>一个商人到底有没有前途，取决于他的开拓意识和远大眼光。</li><li>精神来自兴趣，对工作有兴趣就不会累。</li><li>生意的大门总是想有心人敞开的。如果在竞争中，你输了，那么你输在时间；反之，你赢了，也赢在时间。</li><li>当事业稍有起色时，不能自满，要勇于寻求新的发展，这才是生意长远之道。</li><li>在合作中主动出击很重要。</li><li>永远走在对手前面，才能一直保持不败的地位。</li><li>不愿改变的人只能等待运气，懂得掌握时机的人便能创造机会。</li><li>成功没有绝对方程式，但失败都有定律，减低一切失败的因素就是成功的基石。</li><li>同类企业之间的竞争就是产品质量的竞争。</li><li>人生就是在一点一点的改错中成长，重视自己犯下的每一个错误，在悔悟中成长；原谅他人的过错，为自己的修养加一个筹码。</li><li>未攻之前，一定要先守，每一个政策实施之前都必须做到这一点。</li><li>在企业扩张的时候，一定不能过分贪心，很多被淘汰的企业都是盲目扩张造成的。</li><li>做生意最怕自满。</li><li>克服贪婪不是固守原地不发展，保持合适的发展速度对于一个企业来说是必要的，也是企业做大的重要路子。合适的发展速度是适度的投资，是对行业情况和企业自身情况熟知的前提下的决策，要规模，更要发展。</li><li>毅力是一种心态而不是一种生活。</li><li>管理人员对会计知识的把持和尊重，对现金流的控制，对公司预算的掌握是最基本的元素。</li><li>好的管理艺术在于将新事、新思维与传统中和更新的能力。</li><li>企业的核心责任是追求效率及盈利，尽量扩大自己的资产价值。</li><li>讲究仪容整齐清洁是自律的表现。</li><li>商业架构的灵活制度要建基于实事求是，能有自我修正挽回的机制（Check and Balance）。</li><li>了解细节，经常能预防危机的发生。</li><li>以身作则的目的，就是通过管理者的示范作用，让其他员工完全遵从公司的规章制度。</li><li>自我管理是一名管理者让属下信服、成大事的基本因素。</li><li>企业家要尽可能少地把精力和时间花费在交流上，要用更多的时间来培养自己学习、研究、判断的能力，这是决定竞争优势的东西。</li><li>一名优秀的经理，最重要的一点就是懂得授权和放权。——山姆·沃尔顿</li><li>下君尽己之能，中君尽人之力，上君尽人之智。——韩非子</li><li>以人为本不是前提，而是结果。员工通过辛勤的劳动获得合理的报酬，和家人能过上幸福的生活，这才是最大的以人为本。</li><li>一个能够从细微处体谅和善待他人的人，一定是一个与人为善的人，必定有很好的人缘关系，这种人缘关系就是他成功的基石。——《关爱人》戴尔·卡耐基</li><li>要建立同心协力的团队，第一条法则就是能聆听得到沉默的声音。</li><li>企业管理的关键在于人性化，只有通过和员工有效的沟通，互相有了深层次的了解和理解，企业组织才能更有效地发挥作用。</li><li>创造一个开放、合作、信任的工作环境，重视与全体员工分享信息，不仅可以留住杰出的员工，还可以吸引更多优秀的人才加入。</li><li>伟大的事业需要一颗真诚的心与人沟通。——松下幸之助</li><li>优秀的团队必定是沟通良好、协调一致的团队。</li><li>【每个人都有义务维护彼此的尊严。】</li><li>一个人会犯（非原则性）错误，就意味着他不是一个循规蹈矩、安于现状的人，而是一个具有开拓创新、积极进取精神的人。</li><li>放手去做好你认为对的事，即使犯了错误，也可以从中得到经验教训，不再犯同样的错误。——盛田昭夫</li><li>如果管理者不给予员工犯错的机会，总是想着一手牵着走，或是沉溺于批评、抱怨当中，不管什么铁也终究成不了钢。</li><li>要成为一位成功的领导者，不单要努力，更要听取别人的意见，要有忍耐力，提出自己的意见前，更要考虑别人的意见，最重要的是创造出新颖的意念。</li><li>成功的管理者不会一味地显露自己的才华，而是善于倾听别人的意见，借别人的智慧来赚钱。</li><li>成功的管理者都应是伯乐，伯乐的责任不仅在于甄选、延揽“比他更聪明的人才”，更在于绝对不能挑选名气大却妄自标榜的企业明星。</li><li>人才是经营公司的一等任务。在用人方面，怎样对待人才，是管理者领导能力和驾驭能力的高度体现。——杰克·韦尔奇</li><li>用人上一加一不等于二，搞不好等于零。——皮尔·卡丹</li><li>任人唯亲是中国传统家族式管理的习惯做法，这无疑是表示对外来员工不信任，必然会打击他们工作的积极性。</li><li>能否做到知人善任、任人唯贤，是检验企业管理者胸怀和智慧的重要标准。</li><li>要有同理心、能易地而处、张开心胸去体会来自世界各地不同种族间人们的所思所想，才可以超越种族、性别、年龄、文化及其它隔膜。</li><li>成就事业最关键的是要有人帮助你、乐意跟你工作。</li><li>作为企业领导，维护团队建设首先要做的就是怀有一颗包容开放的心，能够接纳不同的员工，尤其是能力超群的。</li><li>有钱大家赚、利润大家分享，这样才有人愿意合作。</li><li>商业合作三大前提：一是双方必须有可以合作的利益；二是必须有可以合作的意愿；三是双方必须有共享共荣的打算。</li><li>合作是解救人类的唯一途径。——罗素</li><li>能否抓住时机，和企业发展的步伐有重大关联。</li><li>抓住时机的重要因素是知己知彼。</li><li>知识的最大作用是可以磨砺眼光、增强判断力。</li><li>商业的成功，取决于做人的成功。做生意的人都精明能干，可是并不是每个人都能成功，关键在于，你得靠自己踏实的做人之道赢得别人的信任，让别人愿意和你达成交易。</li><li>不要局限于一项业务，目光所及之处都可能存在着商机，应该做好准备，抓住每一个商机。在市场不景气的时候，经营多种业务，还可以分摊风险、共渡难关。</li><li>投资能力的关键就是找准市场投资的最佳切入点。</li><li>谁不思考未来，谁就没有未来。</li><li>最失败的投资方式就是跟风。</li><li>如果你不过分显示自己，就不会招惹对手的敌意，别人也就无法捕捉到你的虚实。</li><li>一个人如果能够在创业之初保持一颗谦虚的心，就能够让人们快速地接纳他，帮助他赢得更多的机会。当他获得一些成就之后，还能保持一颗谦虚的心，那么他的事业就会蒸蒸日上。</li><li>过分卖弄自我的人，只会让自己显得更加可怜。</li><li>不要以为明天一定就和今天一样，唯一的保障来自自己。</li><li>能够正确对待金钱的人，才能做到事业有成。</li><li>必须给合作伙伴留足够的利润空间。</li><li>合伙人之间是一种相互补充、相互扶持的关系，只有充分发挥每一方的优势，才能为彼此都带来利益。</li><li>要取得别人的信任，就必须做到重承诺。在做出每一个承诺之前，必须经过详细的审查和考虑。一经承诺，便要负责到底。</li><li>人以自利为出发点对社会的贡献，要比意图改善社会的人的贡献大。——《国富论》亚当·斯密</li><li>能够在这个世上对其他需要你帮助的人有所贡献，便是内心真正的财富。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_li_ka_shing.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：【】部分为笔者心得，非原文摘抄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;全力以赴是经营企业的基础。&lt;/li</summary>
      
    
    
    
    <category term="阅读" scheme="https://captnotes.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>一旦醒来，再难睡着</title>
    <link href="https://captnotes.github.io/barely-fall-asleep-after-woke-up/"/>
    <id>https://captnotes.github.io/barely-fall-asleep-after-woke-up/</id>
    <published>2023-01-24T23:03:10.000Z</published>
    <updated>2023-08-01T15:42:26.523Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_barely_fall_asleep_after_woke_up.jpg" alt=""></p><p>前阵子我经历过相同套路的几轮电信欺诈，由于不同团伙之间没有建立客户数据共享，所以造成了有的团伙已经碰了一鼻子灰，别的团伙又从头来过的尴尬局面。</p><p>第一通电话是一个自称蚂蚁金服客服打来的：为配合国家禁止大学生参与网络借贷的新规，需要我删除账号中的教育信息。虽然我已毕业多年，还是半信半疑地进入一个钉钉视频群。一进群便知有诈，群里另外俩人，一个只有声音没有画面（以下简称‘声优’），另一个干脆连声音都没有。于是我关了摄像头，看看他们怎么玩儿。</p><p>声优首先以核实手机设置为由，要我在电话拨号键盘上输入<code>**21*[电话号码]#</code>，然后查看微信的微粒贷。让我设置呼叫转移还则罢了，你个“蚂蚁金服”的人操心我微信干嘛？“对，然后我该怎么办？”我故意表现得有些着急又对他深信不疑。他说，由于我之前设置了教育信息，因此授信额度受到影响，现在要跟随他的操作指导，才能提高我的额度。其实套路就是把微粒贷里的钱全贷出来，转他卡上，然后他跑路，我乖乖还贷款。</p><p>一开始我并不清楚他们的套路，只是破绽频现而心生怀疑。我跟他说需要先挂银行卡才能把钱转出来，他还略显不耐烦，一副“吃屎的嫌别人拉得慢”的样子。这时我根据几个关键字搜出了半年前的一篇报道，明白了具体套路，不得不说，<a href="https://xue.baidu.com/okam/pages/strategy-tp/index?strategyId=140540811088072">无条件呼叫转移</a>这一步还是动了脑筋的。</p><p>起先我是想看看他们具体怎么个玩儿法，清楚之后便失去了兴致：“不想跟你逗闷子了，自己找个地方玩儿去吧。”</p><p>后来又有几拨骗子来撩我。第二拨我直接挑明，对方也就识趣地离开了。第三、四拨，我每次都以“正好有事，下下个周末再说”来搪塞。骗子还是很守时的，每次都按照约定准时来电，被我推了好几次之后才醒过味儿来，于是我也摊牌了：知道你们什么套路，这事儿没意思了。</p><p>响鼓不用重锤，本文略去了不少斗智斗勇的细节，比如看到“蚂蚁金服注销部”工牌照片差点儿笑出声来、核实对方真实邮箱等等。事情过去一阵子了，但我时常在想：骗子之所以能得手，完全是因为对方不清楚他们的套路，只要信息透明，就很难再有人上当。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_barely_fall_asleep_after_woke_up.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;前阵子我经历过相同套路的几轮电信欺诈，由于不同团伙之间没有建立客户数据共享，所以造成了有的团伙已经碰了一鼻子灰</summary>
      
    
    
    
    <category term="杂文" scheme="https://captnotes.github.io/categories/%E6%9D%82%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>马老四不配光明正大地死</title>
    <link href="https://captnotes.github.io/return-to-dust/"/>
    <id>https://captnotes.github.io/return-to-dust/</id>
    <published>2022-11-26T05:47:30.000Z</published>
    <updated>2023-08-01T15:54:46.896Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_return_to_dust.jpg" alt=""></p><p>马老四的出场是在干农活时被三嫂催着出来见相亲对象曹贵英。平日里，谁会在意驴棚铲屎官马老四有没有按时出现在饭桌上。</p><p>马有铁，行四，村里人习惯叫他马老四，以至于都忘了他的大名。兄弟四人，三个哥哥分别占了金、银、铜，到他这里，已然是最不值钱的“有铁”。他就像个影子，默默地生活在三哥家后院的小土坯房里，被他那又精又蠢的三哥马干吃尽。村里人调侃他被三哥压榨了这么多年，结婚都不舍得给他摆几桌酒，更甭说买个电视，他不吱声，只是处处护着曹贵英。</p><p>马老四自闭、善良，愚而不昧、钝而不蠢，他知道谁好谁不好、也知道别人心里在算计什么，但他不计较，一辈子温良恭俭让。他是个典型的宿命论者，相信万物皆有命数——面对命数，“能说个啥”。</p><p>曹贵英同样是个苦命人，一度认为驴都比她命好。跟马老四过了半个寒暑，日子刚有点儿起色，就一头淹死在村口的水沟里，连张像样的遗像都没有，还得用结婚照来裁。这半年短暂光阴，便是她用一生的气数换来的。</p><p>下葬前，马老四用麦粒在她手上按了朵花儿，“跑到哪里都丢不掉了”，有个记号，下辈子也好找。马老四仿佛又该回到以前那个不被人在意的日子里，但他回不去了，他知道那就像以往在三哥家吃馍不吃菜一样乏味。要让人始终安于现状，就不能让他见一丁点儿世面。</p><p>料理完后事，马老四补上了牧民的土豆、放生了驴子、清了供销社的赊账、还了借的鸡蛋……这辈子，宁教天下人欠我，莫教我欠任何人。</p><p>马老四喝了农药，还吃了个鸡蛋，农药加个蛋，神仙干瞪眼。马老四吃着鸡蛋，望着墙上的曹贵英，颤抖的手拿起她编的草驴端详着，平静得就像等着回家的大巴发车而已。</p><p>马老四死后，他侄子“继承”了他的猪和鸡，至于那间马老四和泥垒墙、曹贵英做梦也没想过属于自己的土坯房，在别人眼里，不过是一万五的拆迁款罢了。而马老四的下落，与其说些晦气的真话，不如就用“进城过好日子去了”搪塞过去，这样大家面子上都好过。</p><p>有人说，马老四没死，被抢救过来了，片尾字幕最后一行小字为证：“2011 年冬，老四马有铁在政府和热心村民的帮助下，乔迁新居，过上了新生活。”这个嘛，心诚则灵，开心就好。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_return_to_dust.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;马老四的出场是在干农活时被三嫂催着出来见相亲对象曹贵英。平日里，谁会在意驴棚铲屎官马老四有没有按时出现在饭桌上。&lt;/p&gt;
&lt;p&gt;马有铁，行四，村里</summary>
      
    
    
    
    <category term="影视" scheme="https://captnotes.github.io/categories/%E5%BD%B1%E8%A7%86/"/>
    
    
  </entry>
  
  <entry>
    <title>读《左手程序右手诗》</title>
    <link href="https://captnotes.github.io/read-program-on-the-left-hand-and-poetry-on-the-right/"/>
    <id>https://captnotes.github.io/read-program-on-the-left-hand-and-poetry-on-the-right/</id>
    <published>2022-10-13T20:50:38.000Z</published>
    <updated>2023-08-01T15:54:19.709Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_program_on_the_left_hand_and_poetry_on_the_right.jpg" alt=""></p><p>难得近日拾得闲暇来赏读<a href="http://boolan.com/jjhou">侯捷</a>老师文集<a href="https://boolan.com/lecture/1000001218">《左手程序右手诗》</a>。虽然从来无缘 C++、MFC、STL 或 COM 相关开发，但无妨我对侯捷老师在技术著&amp;译作领域成就的尊崇。一言以蔽之，侯捷老师的作品，也就随笔杂文我能看懂。</p><p>我一向更容易对会写作的程序员心生好感。有趣的技术固然令人沉醉，但抛开技术不谈人生又终觉乏味。编码之余还有闲心碎念几句，宛如拉小提琴的爱因斯坦，一扫生冷木讷，更显平易亲和。所以遇到一些同行写的随笔，我常常会饶有兴致地拜读一番。而在技术圈层里，能够长期笔耕不辍进而沉淀丰厚优秀文字者，恕我直言，凤毛麟角。</p><p>IT 是个日新月异的行业，新的技术、新的框架、新的风口、新的概念……层出不穷。波涛中乌泱泱尽是弄潮儿，但能否哪怕一次得以翻腾浪尖，不仅要靠平时的定力与刻苦，更要凭借大量幸运的因素。可想而知，如此氛围中还能数十载孜孜耕耘，潜心记录观察、思考以及心得，实属难能可贵！</p><p>从时效来讲，这本文集基本都是些二十年前的旧文，现实早已时过境迁，但深刻的洞见经得起时间的考验。虽说新的技术时刻都在涌现，但仔细观瞧，不过是相同擂台上各家不尽相同的把式而已。问题还是那些问题，变换的往往只是解决问题的手段罢了，所以感觉越来越明显：很多编程语言看上去愈渐相似、许多框架背后的理念越发相通。</p><p>如今已是全民短视频的时代，文字似乎日渐式微。就好比，我全靠短视频来学着做饭炒菜，哪有耐心去翻阅食谱外加领悟。但我也相信，视频有视频的优势，文字有文字的力量。</p><p>所以，我也想借用侯捷老师引用<a href="https://baike.baidu.com/item/%E8%83%A1%E9%80%82/119246">胡适</a>先生的那句话来作个总结：发表是最好的记忆。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_program_on_the_left_hand_and_poetry_on_the_right.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;难得近日拾得闲暇来赏读&lt;a href=&quot;http://boolan.com/j</summary>
      
    
    
    
    <category term="阅读" scheme="https://captnotes.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>《剪辑的语法》摘要与心得</title>
    <link href="https://captnotes.github.io/grammar-of-the-edit/"/>
    <id>https://captnotes.github.io/grammar-of-the-edit/</id>
    <published>2022-05-06T01:24:18.000Z</published>
    <updated>2023-08-01T16:43:49.176Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_grammar_of_the_edit.jpg" alt=""></p><blockquote><p>注：【】部分为笔者心得，非原文摘抄。</p></blockquote><ul><li>电影的剪辑是对电影拍摄中所捕获的影像和声音“镜头”进行整理、回看、筛选和顺片的过程。剪辑的结果就是一个连贯自然而充满意义的故事或是一种视觉呈现，并会尽量忠于影片的原意——娱乐、传达、启发等。</li><li>剪辑师剪切电影的时间以及不同镜头的衔接方式对观众所产生的影响往往会超越故事。</li><li>剪辑的四种基本方法：<ol><li>切：一个镜头与下一个镜头之间的瞬时转换；</li><li>叠化：从一个镜头的结束画面逐渐转换到下一个镜头的开始画面；</li><li>划变：以特定角度行进的一条线或图形穿过屏幕，消除刚结束的镜头图像并显现出下一镜头的图像；</li><li>淡出淡入：上一组画面逐渐变成全黑屏幕（褪至全黑或淡出），下一组画面从全黑屏幕逐渐转为可见影像（黑色消退或淡入）。</li></ol></li><li>叠化的场合：<ul><li>时间变化；</li><li>地点变化；</li><li>时间需要延缓或者加速；</li><li>故事中出现情绪感染；</li><li>切出和切入画面之间存在强烈的视觉关联。</li></ul></li><li>叠化配合慢动作（slow motion）画面时，可延缓时间的流逝。</li><li>划变的场合：<ul><li>时间变化；</li><li>地点变化；</li><li>切出和切入的画面之间没有过多的视觉联系；</li><li>项目在转场处需要更多画面处理。</li></ul></li><li>淡入/淡出用于以下情形：<ul><li>节目开头/结尾；</li><li>章、场景、片段或幕的开头/结尾；</li><li>时间变化之处；</li><li>地点变化之处。</li></ul></li><li>后期制作工作流程最基本的环节：<ul><li>获取；</li><li>整理；</li><li>回看和筛选；</li><li>顺片（assemble edit）；</li><li>粗剪（rough cut）；</li><li>精剪（fine cut）；</li><li>图像锁定；</li><li>生成母版和交付。</li></ul></li><li>对原素材的整理决定后期制作流程是顺利流畅还是缓慢困难。</li><li>基本镜头类型：<ul><li>超特写（extreme close-up）；</li><li>大特写（big close-up）；</li><li>特写（close-up）；</li><li>中特写（medium close-up）；</li><li>中景（medium shot）；</li><li>中远景（medium long shot）；</li><li>远景（long shot/wide shot）；</li><li>大远景（very long shot）；</li><li>超大远景（extreme long shot）；</li><li>双人镜头（two shot）；</li><li>过肩镜头（over the shoulder）。</li></ul></li><li>镜头拍摄的四个基本要素：<ol><li>变焦镜头；</li><li>摄影机移动；</li><li>座架/支架；</li><li>拍摄对象。</li></ol></li><li>镜头的基本类别：<ul><li>简单镜头：镜头、摄影机、座架未移动，简单的拍摄对象移动；</li><li>复杂镜头：镜头、摄影机、无座架移动，简单的被摄对象移动；</li><li>运动镜头：镜头、摄影机、座架运动，更复杂的被摄对象运动。</li></ul></li><li>焦点不准是最影响镜头效果的。</li><li>演员或被拍摄对象从一个镜头的画面走出，进入另一个镜头的画面，在此过程中银幕方向必须保持一致。</li><li>180° 规则由拍摄一个场景动作的第一个摄影机确定，此镜头通常是一个展示演员和环境的远景。</li><li>匹配角度（matching angles）即在拍摄每个人物时每个镜头类型中该人物的角度、在画面中的大小、面部的焦点要一直。</li><li>视线是一条假想线，连接人物的双眼与电影世界中吸引人物注意力的任何物体。</li><li>人类十分擅长判断动作的流畅性。</li><li>剪辑的最终目的是将成片呈现给观众。剪辑师的任务是千方百计以制片人预想的方式来感染观众。</li><li>剪辑决策依据：<ul><li>信息；</li><li>动机；</li><li>镜头构图；</li><li>摄影机角度；</li><li>连贯；</li><li>声音。</li></ul></li><li>使转场保持平稳顺畅、天衣无缝的连贯，是避免观众注意到剪辑的重要法宝。</li><li>最理想的剪辑是为故事情节服务并时刻吸引观众注意力。</li><li>剪辑的五种类型：<ol><li>连续动作剪辑（action edit）；</li><li>画面位置剪辑（screen position edit）；</li><li>匀称剪辑（form edit）；</li><li>概念剪辑（concept edit）；</li><li>综合剪辑（combined edit）。</li></ol></li><li>基本剪辑练习包括：<ul><li>声音和视觉是搭档而不是对手；</li><li>新的镜头应包含新的信息；</li><li>每一次剪辑都要有理由；</li><li>观察动作线（action line）；</li><li>挑选合适的剪辑形式；</li><li>越好的剪辑越不容易被注意；</li><li>剪辑是一种创作。</li></ul></li><li>剪辑师应切记避免屏幕上影像与声音不匹配，原因就是声音比视觉能更快地制造真实性。眼睛趋向于把看到的事物真实化，而声音则更直接地激发想象力。</li><li>一部电影的成功是基于观众对连贯的视觉信息的期待。</li><li>确定镜头的长度，让眼睛有足够的时间来解读和吸收视觉信息。</li><li>剪辑实践原则：<ul><li>避免从不正确的天头留白（head room）镜头切换到一个正确的天头留白镜头，反之亦然；</li><li>避免镜头中虚假物体离人物头部过近；</li><li>避免画面边缘切掉人脸或身体；</li><li>剪接匹配镜头而不采用不匹配镜头；</li><li>剪辑电影对话时，不要裁掉表演中的停顿，除非特殊要求；</li><li>反应镜头出现在话语中间比话语结束更自然；</li><li>寻找剪辑点时无需受对话约束；</li><li>在三人对话中，不要从双人镜头切换到另一个双人镜头；</li><li>在剪辑单个人物的特写镜头时，脸部越大越好；</li><li>对于单个人物而言，尽量避免切换到拍摄角度相同的镜头；</li><li>剪接“起身”时，要尽量使被摄对象的眼睛长时间保留在画面内；</li><li>动作特写剪接时应选择动作较慢的特写镜头；</li><li>推拉镜头优于变焦镜头；</li><li>谨慎处理无目的的拉远镜头；</li><li>剪辑横摇镜头或平移镜头时，应使用画面流畅、计时精确且引发被摄对象移动的镜头；</li><li>应从静止画面开始或结束横摇、纵横或推拉镜头；</li><li>如果横摇、平移或推拉镜头内被摄物或被摄对象正在移动而接下来又变为静止，那么不要切换到同一物体或人物的静止画面；</li><li>在同一个方向移动的人或物，都有一条动作轴线。剪辑时不得越过这条动作轴线否则运动方向会发生逆转；</li><li>剪接运动镜头时，避免在同一组人的两个双人镜头间切换；</li><li>剪辑电话会话场景时，应多角度拍摄人物头部；</li><li>连续动作剪辑中，如果人物从画面左侧走出，同一人物进入下个镜头时应在右侧；</li><li>注意镜头中“兴趣物”在银幕上的位置；</li><li>一系列特写镜头后，应尽快呈现一个远景镜头；</li><li>对新出场的人物或被摄对象应用特写镜头；</li><li>在剪辑新场景新背景时，应第一时间采用定场镜头；</li><li>连续动作剪辑时，避免从一个人物的远景切换到特写；</li><li>注意切换到远景后再切到黑屏；</li><li>节目开始时，声音轨道先于视觉轨道；</li><li>节目结尾时，使用结尾音乐；</li><li>将剪辑好的影片先搁置一段时间后再重新审视；</li><li>一个场景中采用人物特写镜头达到最佳效果；</li><li>只要人物的“视线”停在兴趣物上，就应立即切出；</li><li>在纪录片剪辑中应去掉受访者言语中的口头禅“嗯”、“啊”之类；</li><li>在声轨层面，确保音乐不要压制话语；</li><li>录制好画面外或过肩镜头演员干净清晰的对话声，将其置于对话音轨之下；</li><li>注意片内字幕和下沿字幕图像持续时间应合理；</li><li>如必要，可在声道音量大的地方剪切；</li><li>充分利用片段中的自然划变作为转场点；</li><li>利用镜头中的快速横摇作为转场点；</li><li>避免在剪辑点剪切改变银幕方向的横摇和纵摇镜头；</li><li>如可能，将剪辑后的影片拿给其他人看并征求他们的反馈；</li><li>剪辑连贯动作镜头时，通过第二个镜头的起始画面推进动作进展；</li><li>延长粗剪时间，不要试图在剪辑初期就尽善尽美；</li><li>带有明喻关系的镜头之间使用叠化；</li><li>使用插入镜头可以弥补连贯动作或压缩/延长时间中的间隙；</li><li>当被摄对象离开画面时，应避免出现空镜头。</li></ul></li><li>平行剪辑（parallel editing）也叫做交叉剪切（cross cutting）要求剪辑师使用特殊的结构将两条故事线交织剪切。也就是说，在显示其中一条故事线的一部分后，在接下来的镜头里转到另一条故事线，这在影片中表示两个剧情正在同时发生。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_grammar_of_the_edit.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：【】部分为笔者心得，非原文摘抄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;电影的剪辑是对电影</summary>
      
    
    
    
    <category term="阅读" scheme="https://captnotes.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>《故事的道德前提》摘要与心得</title>
    <link href="https://captnotes.github.io/the-moral-premise/"/>
    <id>https://captnotes.github.io/the-moral-premise/</id>
    <published>2022-05-05T13:20:17.000Z</published>
    <updated>2023-08-02T01:52:14.231Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_the_moral_premise.jpg" alt=""></p><blockquote><p>注：【】部分为笔者心得，非原文摘抄。</p></blockquote><ul><li>所有成功的影片，都会围绕着一个“并不完美”的人物展开，他（她）想要改善自己的生活，对某个客观现实目的产生诉求，但却在自己前进的路上遭遇了一系列的现实障碍，并且这些障碍变得越来越难以跨越。主角面对着的每一个客观现实障碍，都源于一个单一的、主观精神的，或者说是情绪上的障碍。为了克服所有的现实障碍，主角首先必须跨越这个唯一的精神主观障碍。这个攻克精神障碍的过程，才是主角的整个经历、整部电影想要表达的真实意图。而这个唯一的精神障碍，便是道德前提所要揭示的内容——对主角面临的精神主观困境的真理描述。</li><li>在一部经过精心构建的电影中，每一个场景都提供了某种精神主观层面的证据，以此来证明影片本身的精神推论。</li><li>如果没有道德前提，人物的外部行为便没有牢靠的动机。</li><li>如果编剧在作品中使用的道德前提是错误的、虚假的，或是建构不完善的，那么他最终会发现他的作品中充斥着毫无意义的对话和动作行为，任何人都无法理解他所要表达的前提。</li><li>外部的客观冲突来源于内在的精神价值观冲突。</li><li>冲突是故事必不可少的基本要素，而它必须生根于价值观，围绕着道德前提进行构建。</li><li>只有当兴趣和利益是完全合乎美德的时候，我们才能够真正避免自己犯错。—— 本杰明·富兰克林</li><li>电影类型:</li></ul><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>动作（Action）</td><td>冒险（Adventure）</td><td>艺术（Art）</td><td>拍档（Buddy）</td><td>恶搞（Capers）</td></tr><tr><td>喜剧（Comedy）</td><td>成长（Coming-of-age）</td><td>法庭（Courtroom）</td><td>犯罪（Crime）</td><td>侦探（Detective）</td></tr><tr><td>灾难（Disaster）</td><td>史诗（Epic）</td><td>幻想（Fantasy）</td><td>黑色（Film Noir）</td><td>强盗（Gangster）</td></tr><tr><td>鬼怪（Ghost）</td><td>历史（Historical）</td><td>恐怖（Horror）</td><td>爱情（Love）</td><td>音乐（Musicals）</td></tr><tr><td>神话（Myth）</td><td>公路（Road）</td><td>情节剧（Romance）</td><td>科幻（Sci-fi）</td><td>社会（Social）</td></tr><tr><td>惊悚（Thrillers）</td><td>西部（Western）</td><td></td><td></td></tr></tbody></table></div><ul><li><p>叙事中的价值观冲突大致氛围：</p><ol><li>人与人；</li><li>人与自然；</li><li>人与自己；</li><li>人与超自然（Supernatural）；</li><li>人与社会；</li><li>人与机器。</li></ol></li><li><p>乔治·波尔蒂的 36 中戏剧情境：</p></li></ul><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>祷告</td><td>救赎</td><td>报复性犯罪</td><td>血亲间的报复</td><td>追求</td><td>灾难</td></tr><tr><td>成为残忍或厄运的受害者</td><td>反抗</td><td>勇敢而艰巨的事业</td><td>诱拐</td><td>谜题</td><td>获取</td></tr><tr><td>对父辈的敌意</td><td>与父辈的抗争</td><td>肆意的淫乱</td><td>疯狂</td><td>致命的轻率</td><td>爱情导致的犯罪</td></tr><tr><td>因父辈不认可引发的杀戮</td><td>为理想牺牲</td><td>为亲人牺牲</td><td>激情的代价</td><td>必须牺牲所爱的人或物</td><td>高等与低等的抗争</td></tr><tr><td>通奸</td><td>爱的犯罪</td><td>发现爱人的不忠</td><td>爱情的阻拦</td><td>爱上敌人</td><td>雄心壮志</td></tr><tr><td>与神灵的冲突</td><td>错误的嫉恨</td><td>错误的裁决</td><td>懊悔</td><td>失而复得</td><td>痛失所爱</td></tr></tbody></table></div><ul><li>是否拥有一个强大的道德核心，决定了电影能否获得成功。</li><li>“道德”并非仅仅表明正确的东西，而更多的是在论述错与对之间的区别。</li><li>树立榜样要比强调戒律更有效地作用于心灵。</li><li>故事讲述者的目的，就是带领着观众经历一段情绪的、精神的历程，并在其中揭示出有关人类经历的尖锐真理。这种历程对于观众来说应该是畅通无阻的，并且能够引发出深刻的共鸣。</li><li>戏剧必须是关于“一个单一的，而非多重的问题”。—— Michael Tierno</li><li>编剧最重要的就是彻底地理解自己的人物，他们的每一个瞬间行为都是由他们性格中的多重面与复杂性决定的。</li><li>最为成功的电影都是关于普遍真理（Universal Truths）的，它们作用于所有的人群、所有的地域，贯穿所有的历史时段。</li><li>“道德前提”的结构形式：（道德缺陷）引起（失败），而（美德）带来（成功）。</li><li>在大多数的成功电影里，主角首先都是朝着错误的方向扬帆起航，直到他学会并领悟了真理，继而再以正确的方式步入结局。</li><li>道德前提给予了人物客观和主观上的行为动机，并不断告诫主角美德与缺陷分别可能会带来的奖赏与惩罚。</li><li>当一个电影人将观众和电影缝合在一起，他就算是成功了。缝合意味着最极致的联系，当观众与电影中的人物产生认同，他们便会从生理到心理上被强烈的带入故事，与人物共同进退。</li><li>现实缝合，指的是借助摄影机机位或剪辑手段等机械方式，将观众带入故事剧情。</li><li>如果在电影中，自始至终都描绘着相同的道德前提，并且它与观众所熟知的自然法则、万物秩序是统一的，那么观众便会从精神主观的层面被缝合入电影里，认同电影的叙事，并且相信电影所传达的原则是真实正确的。</li><li>当我们决定要写一部剧本时，我们需要知道故事的真实意图以及如何结局，这将有效地推动故事情节结构的形成、塑造人物的现实与道德旅程，最终将它们导向符合逻辑且令人满意的结局。</li><li>缺陷给英雄，美德给坏人，这样才能赐予你的人物深度。</li><li>类型电影都包含着最基本的文化冲突，它无法获得终极解答，只能提供一种暂时的、理想化的解决方案。</li><li>尽管在客观现实中，人物间各自的目的都不尽相同，但它们从本质上来说都必须来源于对同一个道德前提的隐喻。</li><li>人物的戏剧轨迹，要求这个人物从某种程度的好或坏的行为方式，转变成为另一种程度的行为方式，而一个人物的外部行为都必须是由他内心的价值观与选择来决定的。</li><li>电影有效性共识（Film Validity Equation）： <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -2.827ex;" xmlns="http://www.w3.org/2000/svg" width="32.824ex" height="6.785ex" role="img" focusable="false" viewBox="0 -1749.5 14508 2999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(1046.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2102.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M758 -1237T758 -1240T752 -1249H736Q718 -1249 717 -1248Q711 -1245 672 -1199Q237 -706 237 251T672 1700Q697 1730 716 1749Q718 1750 735 1750H752Q758 1744 758 1741Q758 1737 740 1713T689 1644T619 1537T540 1380T463 1176Q348 802 348 251Q348 -242 441 -599T744 -1218Q758 -1237 758 -1240Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(792,0)"><g data-mml-node="mstyle"><g data-mml-node="munderover"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(67.9,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1350,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(32.6,1150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1350,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mfrac" transform="translate(1610.7,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="msub" transform="translate(769,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mo" transform="translate(1947.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2947.9,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(3716.9,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(4442.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(5442.4,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(6211.4,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="msub" transform="translate(6680.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g><g data-mml-node="mn" transform="translate(3805.4,-686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><rect width="7870.8" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mo" transform="translate(10513.5,0) translate(0 -0.5)"><path data-c="29" d="M33 1741Q33 1750 51 1750H60H65Q73 1750 81 1743T119 1700Q554 1207 554 251Q554 -707 119 -1199Q76 -1250 66 -1250Q65 -1250 62 -1250T56 -1249Q55 -1249 53 -1249T49 -1250Q33 -1250 33 -1239Q33 -1236 50 -1214T98 -1150T163 -1052T238 -910T311 -727Q443 -335 443 251Q443 402 436 532T405 831T339 1142T224 1438T50 1716Q33 1737 33 1741Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(13408,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(13908,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container><ul><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.74ex" height="1.595ex" role="img" focusable="false" viewBox="0 -683 769 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g></svg></mjx-container>：电影的有效性；</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="3.904ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1725.5 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="msub" transform="translate(769,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(502,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container>：每一个独立场景体现的有效力；</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.878ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 1272 877"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(769,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g></g></svg></mjx-container>：前提的有效力；</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.042ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 2228.5 877"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(769,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="msub" transform="translate(1238,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(536,-150) scale(0.707)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></g></svg></mjx-container>：每一个场景对前提的支撑力度；</li><li><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>：一部特定的电影中场景的数量。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_the_moral_premise.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：【】部分为笔者心得，非原文摘抄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;所有成功的影片，都会围</summary>
      
    
    
    
    <category term="阅读" scheme="https://captnotes.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>《架构整洁之道》摘要与心得</title>
    <link href="https://captnotes.github.io/clean-architecture/"/>
    <id>https://captnotes.github.io/clean-architecture/</id>
    <published>2022-04-05T02:20:05.000Z</published>
    <updated>2023-08-01T15:49:29.375Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_clean_architecture.jpg" alt=""></p><blockquote><p>注：【】部分为笔者心得，非原文摘抄。</p></blockquote><ul><li>软件架构的终极目标是，用最小的人力成本来满足构建和维护该系统的需求。</li><li>软件架构的优劣，可以用它满足用户需求所需要的成本来衡量。</li><li>要想跑得快，先要跑得稳。</li><li>软件系统必须保持灵活。</li><li>需求变更的范畴与形状，是决定对应软件变更实施成本高低的关键。</li><li>平衡系统架构的重要性与功能的紧急程度，是软件研发人员的职责。</li><li>结构化编程对程序控制权的直接转移进行了限制和规范；面向对象编程对程序控制权的间接转移进行了限制和规范；函数式编程对程序中的赋值进行了限制和规范。</li><li>科学方法论不需要证明某条结论是正确的，只需要想办法证明它是错误的。</li><li>测试只能展现 Bug 的存在，并不能证明不存在 Bug。—— Edsger W. Dijkstra</li><li>测试的作用是让我们得出某段程序已经足够实现当前目标这一结论。</li><li>对于架构师来说，面向对象编程就是以多态为手段来对源代码中的依赖关系进行控制的能力，这种能力让架构师可以构建出某种插件式架构，让高层策略性组件与低层实现性组件分离，低层组件可以编译成插件，实现独立于高层组件的开发和部署。</li><li>所有的竞争问题、死锁问题、并发更新问题都是由可变变量导致的。</li><li>架构设计良好的应用软件应该将状态修改的部分和不需要修改状态的部分隔离成单独的组件，然后用合适的机制来保护可变量。</li><li>架构师应该着力于将大部分处理逻辑都归于不可变组件中，可变状态组件的逻辑应该越少越好。</li><li>程序无一例外是由顺序结构、分支结构、循环结构和间接转移这几种行为组合而成的，无可增加，也缺一不可。</li><li>一般情况下，我们为软件构建中层结构的主要目标有：<ul><li>使软件可容忍被改动；</li><li>使软件更容易被理解；</li><li>构建可在多个软件系统中复用的组件。</li></ul></li><li>SOLID 原则<ul><li>SRP（Single-responsibility Principle，单一职责原则）：任何一个软件模块都应该只对某一类行为者负责；</li><li>OCP（Open-closed Principle，开闭原则）：系统设计必须允许新增代码修改系统行为，而非只能靠修改原有代码；</li><li>LSP（Liskov Subsitution Principle，里氏替换原则）：组件必须遵守同一约定，一边这些组件可以相互替换；</li><li>ISP（Interface Segregation Principle，接口隔离原则）：在设计中避免不必要的依赖；</li><li>DIP（Dependency Inversion Principle，依赖反转原则）：高层策略性的代码不应该依赖实现底层细节的代码，而实现底层细节的代码应该依赖高层策略性代码。</li></ul></li><li>在一般情况下，任何层次的软件设计如果依赖于不需要的东西，都会是有害的。</li><li>应在代码中多使用抽象接口，尽量避免使用那些多变的具体实现类。</li><li>不要在具体实现类上创建衍生类。</li><li>不要覆盖（override）包含具体实现的函数。</li><li>应避免在代码中写入与任何具体实现相关的名字，或者是其它容易变动的事物的名字。</li><li>源代码的依赖方向永远是控制流方向的反转，这是 DIP 被称为依赖反转原则的原因。。</li><li>组件是软件的部署单元，是整个软件系统在部署过程中可以独立完成部署的最小实体。</li><li>与构建组件相关的三个基本原则：<ol><li>REP（Release Reuse Equivalence Principle，复用/发布等同原则）：软件复用的最小粒度应等同于其发布的最小粒度；</li><li>CCP（Common Closure Principle，共同闭包原则）：将那些会同时修改，并且为相同目的而修改的类放到同一个组件中，而将不会同时修改，并且不会为了相同目的而修改的那些类放到不同的组件中；</li><li>CRP（Composite Reuse Principle，共同复用原则）：将经常共同复用的类和模块放在同一个组建中。</li></ol></li><li>对大部分应用程序来说，可维护性的重要性要远远高于可复用性。</li><li>组件依赖关系图中不应该出现环。</li><li>组件结构图中的一个重要目标是指导如何隔离频繁的变更。</li><li>依赖关系必须要指向更稳定的方向。</li><li>组件的抽象化程度应该与其稳定性保持一致。</li><li>绝对不要听从那些说应该让架构师从代码中解放出来以专心解决高阶问题的伪建议。</li><li>软件架构设计最高优先级目标就是保持系统正常工作。</li><li>基本上，所有的软件系统都可以降解为策略与细节这两种主要元素。策略体现的是软件中所有的业务规则与操作过程，因此它是系统真正的价值所在。细节则是指那些让操作该系统的人、其它系统以及程序员们与策略进行交互，但是又不会影响到策略本身的行为。</li><li>优秀的策略应该允许系统尽可能地推迟与实现细节相关的决策，越晚最决策越好。</li><li>设计良好的软件架构必须支持以下几点：<ul><li>系统的用例与正常运行；</li><li>系统的维护；</li><li>系统的开发；</li><li>系统的部署。</li></ul></li><li>康威定律：任何一个组织在设计系统时，往往都会复制出一个与该组织内沟通结构相同的系统。</li><li>设计良好的软件架构可以让系统在构建完成后立刻就能部署。</li><li>设计良好的架构应该通过保留可选项的方式，让系统在任何情况下都能方便地做出必要的变更。</li><li>软件架构设计本身就是一门划分边界的艺术。</li><li>通过将策略隔离，并让源代码中的依赖方向都统一调整为指向高层策略，可以大幅降低系统变更所带来的影响。</li><li>用例本质上就是关于如何操作一个自动化系统的描述，它定义了用户需要提供的输入数据、用户应该得到的输出信息以及产生输出所应该采取的处理步骤。</li><li>用例控制着业务实体之间的交互方式。</li><li>用例并不描述系统与用户之间的接口，它只描述该应用在某些特定情景下的业务逻辑，这些业务逻辑所规范的是用户与业务实体之间的交互方式，它与数据流入/流出系统的方式无关。</li><li>业务逻辑应该保持纯净，不要掺杂用户界面或者所使用的数据库相关的东西。在理想情况下，这部分代表业务逻辑的代码应该是整个系统的核心，其它低层概念的实现应该以插件形式接入系统中。业务逻辑应该是系统中最独立、复用性最高的代码。</li><li>良好的架构设计应该只关注用例，并能将它们与其它的周边因素隔离开。</li><li>不应该将未来的需求抽象化。</li><li>任何形式的共享数据行为都会导致强耦合。</li><li>虽然软件质量本身并不会随时间推移而损耗，但是未妥善管理的硬件依赖和固件依赖却是软件的头号杀手。</li><li>如果一个系统的代码只能在目标硬件上测试，那么它的开发过程会变得非常艰难。</li><li>可以使用框架，但要时刻警惕，别被它拖住。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_clean_architecture.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：【】部分为笔者心得，非原文摘抄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;软件架构的终极目标是</summary>
      
    
    
    
    <category term="阅读" scheme="https://captnotes.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter的强制自我审查</title>
    <link href="https://captnotes.github.io/flutter-pre-commit/"/>
    <id>https://captnotes.github.io/flutter-pre-commit/</id>
    <published>2022-03-11T23:10:53.000Z</published>
    <updated>2023-08-02T01:34:12.649Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_flutter_pre_commit.jpg" alt=""></p><p>在<a href="/effective-code-review">《如何做好 Code Review》</a>中我论述过代码审查对于保证代码品质的重要性，最近开始采用<a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">Git Hooks</a>的方式为<a href="https://flutter.dev/">Flutter</a>项目增加提交前的强制自我审查。这样做的好处在于将机械化检查交给电脑，把思考的部分留给大脑。</p><p>我认为代码提交前需要做的最基本检查包括格式和代码规范。前者交给<a href="https://prettier.io/">Prettier</a>，后者由<a href="https://docs.flutter.dev/testing/debugging#the-dart-analyzer">Analyze</a>负责。</p><h3 id="Lefthook"><a href="#Lefthook" class="headerlink" title="Lefthook"></a>Lefthook</h3><p>我采用<a href="https://github.com/evilmartians/lefthook">Lefthook</a>实现 Git 钩子，如果你有更好的选择，欢迎推荐分享。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mac</span></span><br><span class="line">brew install lefthook &amp;&amp; lefthook install</span><br></pre></td></tr></table></figure><p>安装 Lefthook 后，在项目根目录下运行<code>lefthook install</code>命令来生成<code>lefthook.yml</code>文件，并在其中的<code>pre-commit &gt; commands</code>节点下添加两项配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">prettier:</span></span><br><span class="line">  <span class="attr">glob:</span> <span class="string">&quot;*.dart&quot;</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">dart</span> <span class="string">format</span> &#123;<span class="string">staged_files</span>&#125; <span class="string">&amp;&amp;</span> <span class="string">git</span> <span class="string">add</span> &#123;<span class="string">staged_files</span>&#125;</span><br><span class="line"><span class="attr">linter:</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">dart</span> <span class="string">analyze</span></span><br></pre></td></tr></table></figure><h3 id="Analyze"><a href="#Analyze" class="headerlink" title="Analyze"></a>Analyze</h3><p><code>flutter analyze</code>通过<a href="https://pub.dev/packages/flutter_lints">flutter_lints</a>插件对<a href="https://dart.dev">Dart</a>代码进行静态语言检查，检查规则配置在<code>analysis_options.yaml</code>文件中。但是打开该文件可以看到，Flutter 并没有为我们配置任何默认规则。我把我正在采用的规则配置放在文末，欢迎酌情采纳。</p><p>接下来我们可以测试一下配置能否正常工作。比如，将<code>main()</code>替换为：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">const</span> title=    <span class="string">&#x27;Flutter&#x27;</span>;</span><br><span class="line">  runApp(<span class="keyword">const</span> MyApp());&#125;</span><br><span class="line"></span><br><span class="line">aa()         &#123;&#125;</span><br></pre></td></tr></table></figure><p>然后运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .&amp;&amp;git commit -m <span class="string">&#x27;Commit for analysis.&#x27;</span></span><br></pre></td></tr></table></figure><p>接下来你会发现，Prettier 将代码格式化为：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  <span class="keyword">const</span> title = <span class="string">&#x27;Flutter&#x27;</span>;</span><br><span class="line">  runApp(<span class="keyword">const</span> MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aa() &#123;&#125;</span><br></pre></td></tr></table></figure><p>但是静态检查没有通过，因为<code>title</code>变量没有被使用、函数<code>aa</code>没有返回类型等：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">EXECUTE &gt; linter</span><br><span class="line"> Analyzing demo_lint_flutter...</span><br><span class="line"></span><br><span class="line">   info • The value of the <span class="built_in">local</span> variable <span class="string">&#x27;title&#x27;</span> isn<span class="string">&#x27;t used • lib/main.dart:4:9 • unused_local_variable</span></span><br><span class="line"><span class="string">   info • The function &#x27;</span>aa<span class="string">&#x27; should have a return type but doesn&#x27;</span>t • lib/main.dart:8:1 • always_declare_return_types</span><br><span class="line">   info • Type annotate public APIs • lib/main.dart:8:1 • type_annotate_public_apis</span><br><span class="line"></span><br><span class="line">3 issues found. (ran <span class="keyword">in</span> 2.0s)</span><br></pre></td></tr></table></figure><p>强烈建议你在接下来的每一个 Flutter 项目里都坚持这样做，不要提交 Smelling Code。</p><h3 id="analysis-options-yaml"><a href="#analysis-options-yaml" class="headerlink" title="analysis_options.yaml"></a>analysis_options.yaml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span> <span class="string">package:flutter_lints/flutter.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">analyzer:</span></span><br><span class="line">  <span class="attr">strong-mode:</span></span><br><span class="line">    <span class="attr">implicit-casts:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">errors:</span></span><br><span class="line">    <span class="attr">missing_required_param:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">missing_return:</span> <span class="string">warning</span></span><br><span class="line">    <span class="attr">todo:</span> <span class="string">ignore</span></span><br><span class="line"></span><br><span class="line"><span class="attr">linter:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="attr">always_declare_return_types:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">always_require_non_null_named_parameters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">annotate_overrides:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_bool_literals_in_conditional_expressions:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_catching_errors:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_classes_with_only_static_members:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_empty_else:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_escaping_inner_quotes:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_field_initializers_in_const_classes:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_function_literals_in_foreach_calls:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_implementing_value_types:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_init_to_null:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_multiple_declarations_per_line:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_null_checks_in_equality_operators:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_positional_boolean_parameters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_print:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_private_typedef_functions:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_redundant_argument_values:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_relative_lib_imports:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_return_types_on_setters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_returning_null_for_future:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_returning_null_for_void:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_setters_without_getters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_shadowing_type_parameters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_single_cascade_in_expression_statements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_type_to_string:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_types_as_parameter_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_unnecessary_containers:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_unused_constructor_parameters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_void_async:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">avoid_web_libraries_in_flutter:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">await_only_futures:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">camel_case_extensions:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">camel_case_types:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">cancel_subscriptions:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">cast_nullable_to_non_nullable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">constant_identifier_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">control_flow_in_finally:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">curly_braces_in_flow_control_structures:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">depend_on_referenced_packages:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">deprecated_consistency:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">empty_catches:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">empty_constructor_bodies:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">empty_statements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">eol_at_end_of_file:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exhaustive_cases:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">file_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">hash_and_equals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">implementation_imports:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">invariant_booleans:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">iterable_contains_unrelated_type:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">join_return_with_assignment:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">leading_newlines_in_multiline_strings:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">library_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">library_prefixes:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">list_remove_unrelated_type:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">missing_whitespace_between_adjacent_strings:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">no_adjacent_strings_in_list:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">no_duplicate_case_values:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">no_logic_in_create_state:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">no_runtimeType_toString:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">non_constant_identifier_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">noop_primitive_operations:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">null_check_on_nullable_type_parameter:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">null_closures:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">overridden_fields:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">package_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">package_prefixed_library_names:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">parameter_assignments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_asserts_in_initializer_lists:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_collection_literals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_conditional_assignment:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_const_constructors:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_const_constructors_in_immutables:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_const_declarations:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_const_literals_to_create_immutables:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_constructors_over_static_methods:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_contains:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_equal_for_default_values:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_final_fields:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_final_in_for_each:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_final_locals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_for_elements_to_map_fromIterable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_function_declarations_over_variables:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_generic_function_type_aliases:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_if_elements_to_conditional_expressions:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_if_null_operators:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_initializing_formals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_inlined_adds:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_interpolation_to_compose_strings:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_is_empty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_is_not_empty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_is_not_operator:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_iterable_whereType:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_null_aware_method_calls:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_spread_collections:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_typing_uninitialized_variables:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">prefer_void_to_null:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">provide_deprecation_message:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">recursive_getters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">require_trailing_commas:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sized_box_for_whitespace:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">slash_for_doc_comments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_child_properties_last:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_unnamed_constructors_first:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">test_types_in_equals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">throw_in_finally:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tighten_type_of_initializing_formals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type_annotate_public_apis:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type_init_formals:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_await_in_return:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_brace_in_string_interps:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_const:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_getters_setters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_new:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_null_aware_assignments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_null_checks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_null_in_if_null_operators:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_nullable_for_final_variable_declarations:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_overrides:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_parenthesis:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_raw_strings:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_statements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_string_escapes:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_string_interpolations:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unnecessary_this:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unrelated_type_equality_checks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">unsafe_html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_build_context_synchronously:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_full_hex_values_for_flutter_colors:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_function_type_syntax_for_parameters:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_named_constants:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_late_for_private_fields_and_variables:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_rethrow_when_possible:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_setters_to_change_properties:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_string_buffers:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">use_test_throws_matchers:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">valid_regexps:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">void_checks:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_flutter_pre_commit.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;/effective-code-review&quot;&gt;《如何做好 Code Review》&lt;/a&gt;中我论述过代码审查对于保证</summary>
      
    
    
    
    <category term="编程" scheme="https://captnotes.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>嬉 - 创业十忌</title>
    <link href="https://captnotes.github.io/playfulness-ttos/"/>
    <id>https://captnotes.github.io/playfulness-ttos/</id>
    <published>2022-02-25T16:29:40.000Z</published>
    <updated>2023-10-16T01:50:16.794Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_playfulness.jpg" alt="嬉 - 创业十忌"></p><p><a href="/preface-ttos">序</a></p><blockquote><p>嬉：业精于勤，荒于嬉；行成于思，毁于随。——《进学解》唐·韩愈</p></blockquote><p>不必贬低一个失败的人，只要他真的努力过，毕竟现实世界不是努力就一定有好结果。</p><p>但有一种人则属于表演型奋斗者，比如办公室摆着很多书，却时常要么翘着二郎腿玩游戏、要么邀一群人来吹牛聊天。</p><p>曾经风光无两的<a href="https://baike.baidu.com/item/%E7%BD%91%E9%99%85%E5%BF%AB%E8%BD%A6">网际快车</a>之所以日暮途穷，就是因为创始人沉迷于游戏不能自拔。游戏不是洪水猛兽，但是过度沉浸于某件事而耽误了主业，这个后果还得自己来承担。</p><p>我不推崇苦行僧式的的奋斗。奋斗的历程一定是艰苦的，但不是越苦越容易出成绩。虽然艰苦和成功往往如影随形，但其实并没有一个可以量化的标准比例。所以不必迷信艰苦，更不要歌颂苦难，不如把精力和脑力用在如何提高效率、锁定正确目标上。</p><p>我也不是排斥娱乐，谁不喜欢玩儿呢，毕竟是人类的天性。但放松调节和玩物丧志完全是两回事。长期处于紧张状态容易让人变得悲观和疲倦，适当的娱乐能够重拾乐观与自信。而且大脑的放松还有助于找到之前苦寻不得的答案。其实我就遇到过几次，在经历一段长时间的工作后，卡在某个问题上总是找不到好的办法，实在烦了就去干点儿别的，却很快就像是顿悟了一样，脑子里冒出了解决方案。</p><p>所谓“老虎赶路，不追小兔”，而有些“老虎”却专干追猫撵狗的事儿，还假装自己很勤奋很用功，一副天道必然酬勤的架势，本质上不过是在吃老本罢了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_playfulness.jpg&quot; alt=&quot;嬉 - 创业十忌&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/preface-ttos&quot;&gt;序&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嬉：业精于勤，荒于嬉；行成于思，毁于</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="startup" scheme="https://captnotes.github.io/categories/startup/"/>
    
    <category term="创业十忌" scheme="https://captnotes.github.io/categories/startup/%E5%88%9B%E4%B8%9A%E5%8D%81%E5%BF%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>永远的乙方</title>
    <link href="https://captnotes.github.io/forever-party-b/"/>
    <id>https://captnotes.github.io/forever-party-b/</id>
    <published>2022-02-21T13:53:15.000Z</published>
    <updated>2023-08-01T15:43:54.141Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_forever_party_b.jpg" alt=""></p><p>混迹职场，可以有很多种心态：以公司为家、与团队为敌、道不同不相为谋……今天我想简单聊下我从去年实践至今的心态——始终将自己放在乙方的位置。</p><p>大概会有很多朋友对此不屑：“乙方？呵呵，你愿当你当去，我可不想再看甲方爸爸的脸色！”没错，作为甲方确实有许多好处，比如项目比较自主、不用整天面对金主的颐指气使、不必为了回款而低头哈腰，等等。</p><p>但是，有谁真的能逃脱乙方的命运吗？这也正是我要说的，把自己调整为乙方的心态，可能更有利于职场的发展。</p><p>想象自己运营着一家只有你自己的小公司，这家公司的生死存亡完全得靠你。然后，把领导、同事看作是一个个发给你订单和需求的甲方。甚至，面对下属也不要一副“奴隶主”的嘴脸，记住：你并不拥有任何人。与其说他们服从于你，不如说他们服从于你的职务。</p><p>我不是教任何人如何卑躬屈膝，相反，我分享的是一种视角和心态，一种把自己放在广义创业者角度来面对工作和事业的态度。创业不是特指注册一家公司、印一沓名片、在办公室里摆个茶盘弄个貔貅啥的，创业是一种为自己负责、主动思考下一步、为提高效率而摒弃狭隘心理的工作状态。</p><p>当你把上、平、下级同事通通当成自己的合作方，或许你眼中的同事，就不再像过去那样分为可爱、无聊或者讨厌了。你与其他任何人合作的最终目的就是为了让你这一个人的小公司能够活下去。这样的心态也有助于保持同事之间适当的距离感，从而减少产生职场负面情绪的几率。</p><p>别忘了，把你的工资当成是项目款。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_forever_party_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;混迹职场，可以有很多种心态：以公司为家、与团队为敌、道不同不相为谋……今天我想简单聊下我从去年实践至今的心态——始终将自己放在乙方的位置。&lt;/p</summary>
      
    
    
    
    <category term="创业" scheme="https://captnotes.github.io/categories/%E5%88%9B%E4%B8%9A/"/>
    
    <category term="管理" scheme="https://captnotes.github.io/categories/%E7%AE%A1%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>玩转二叉树</title>
    <link href="https://captnotes.github.io/binary-tree-basis/"/>
    <id>https://captnotes.github.io/binary-tree-basis/</id>
    <published>2021-12-11T19:55:11.000Z</published>
    <updated>2023-08-02T01:49:45.116Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_binary_tree_basis.jpg" alt=""></p><p>树是计算机编程当中很基础的一种数据结构，二叉树则是树中最基本的一种。虽然很多程序员在日常工作中未必会直接用到二叉树，但是对于这样一种基础的数据结构，熟练掌握其基本概念和操作，有助于关键场合不露怯。毕竟，所有的玩儿法都是由最基本最核心的理念衍生而成。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>二叉树，顾名思义，从根结点开始，每个结点可以分出最多两个子结点，没有子结点的结点叫叶子。</p><h3 id="形态"><a href="#形态" class="headerlink" title="形态"></a>形态</h3><h4 id="满二叉树"><a href="#满二叉树" class="headerlink" title="满二叉树"></a>满二叉树</h4><p>“满”即是“饱满”：一个从根到叶子，每一个非叶子结点都分出两个子结点，看上去是那么的饱满。其总结点个数计算公式为：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="6.049ex" height="2.117ex" role="img" focusable="false" viewBox="0 -853.7 2673.8 935.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1173.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2173.8,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container>为深度；第<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>层结点个数计算公式为：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="4.323ex" height="1.887ex" role="img" focusable="false" viewBox="0 -833.9 1910.9 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>。</p><h4 id="完全二叉树"><a href="#完全二叉树" class="headerlink" title="完全二叉树"></a>完全二叉树</h4><p>不饱满也不要紧，只要缺的都是右叶子而不缺左叶子。其深度计算公式为：<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.923ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4828 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="230A" d="M174 734Q174 735 175 737T177 740T180 744T184 747T189 749T196 750Q206 748 214 735V-210H310H373Q401 -210 411 -213T422 -230T411 -247T369 -251Q362 -251 338 -251T298 -250H190Q178 -246 174 -234V734Z"></path></g><g data-mml-node="mi" transform="translate(444,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(742,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="msub" transform="translate(1227,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(2140.6,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(2661.6,0)"><path data-c="230B" d="M229 734Q229 735 230 737T232 740T235 744T239 747T244 749T251 750Q262 748 269 735V-235Q266 -240 256 -249L147 -250H77Q43 -250 32 -247T21 -230T32 -213T72 -209Q79 -209 99 -209T133 -210H229V734Z"></path></g><g data-mml-node="mo" transform="translate(3327.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4328,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>。</p><h4 id="二叉搜索树-红黑树"><a href="#二叉搜索树-红黑树" class="headerlink" title="二叉搜索树/红黑树"></a>二叉搜索树/红黑树</h4><p>左子结点值小于父结点值，父结点值小于右子结点值，且左子树中所有结点值均小于根结点值，根结点值小于右子树中任一结点值。</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TreeNode</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">private</span> TreeNode leftChildNode;</span><br><span class="line">    <span class="keyword">private</span> TreeNode rightChildNode;</span><br><span class="line"></span><br><span class="line">    TreeNode() {</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    TreeNode(<span class="type">int</span> value) {</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    TreeNode(<span class="type">int</span> value, TreeNode leftChildNode, TreeNode rightChildNode) {</span><br><span class="line">        <span class="built_in">this</span>.value = value;</span><br><span class="line">        <span class="built_in">this</span>.leftChildNode = leftChildNode;</span><br><span class="line">        <span class="built_in">this</span>.rightChildNode = rightChildNode;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><h4 id="深度优先"><a href="#深度优先" class="headerlink" title="深度优先"></a>深度优先</h4><p>深度遍历二叉树分为前序、中序和后序遍历，一般采用递归的实现形式比较简洁。无论哪种遍历，左结点一定是在右结点之前遍历，而所谓的前、中、后，则是中间结点在什么时机处理的区别。因此：</p><ul><li>前序遍历 = <strong>中</strong> → 左 → 右</li><li>中序遍历 = 左 → <strong>中</strong> → 右</li><li>后序遍历 = 左 → 右 → <strong>中</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">traverseDepthFirst</span><span class="params">(TreeNode node)</span> {</span><br><span class="line">    <span class="keyword">if</span> (node == <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    System.out.println(node.value); <span class="comment">// Preorder.</span></span><br><span class="line">    traverseDepthFirst(node.leftChildNode);</span><br><span class="line">    <span class="comment">// System.out.println(node.value); // Inorder.</span></span><br><span class="line">    traverseDepthFirst(node.rightChildNode);</span><br><span class="line">    <span class="comment">// System.out.println(node.value); // Postorder.</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="宽度优先"><a href="#宽度优先" class="headerlink" title="宽度优先"></a>宽度优先</h4><p>层序遍历二叉树一般可以用<code>LinkedList</code>或类似的数据类结合迭代来实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">traverseBreadthFirst</span><span class="params">(TreeNode rootNode)</span> {</span><br><span class="line">    LinkedList&lt;TreeNode&gt; linkedList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rootNode == <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    linkedList.offer(rootNode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!linkedList.isEmpty()) {</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> linkedList.size();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; index &lt; size; index++) {</span><br><span class="line">            <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> linkedList.pop();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (node == <span class="literal">null</span>) {</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            System.out.println(node.value);</span><br><span class="line"></span><br><span class="line">            linkedList.offer(node.leftChildNode);</span><br><span class="line">            linkedList.offer(node.rightChildNode);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>聊完遍历来看看构建吧。可以通过两个数组来构建一个二叉树，这两个数组分别对应的是二叉树的前序及中序遍历，或者中序与后序遍历。下面这段代码就是通过递归的方式，用前序和中序遍历数组构建出一个二叉树。而利用中序和后序遍历构建与这种方式雷同，区别在于：前序数组的第一个元素代表父结点，后续数组中对应的是最后一个元素。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> TreeNode <span class="title function_">buildTree</span><span class="params">(<span class="type">int</span>[] preorder, <span class="type">int</span>[] inorder)</span> {</span><br><span class="line">    <span class="keyword">if</span> (preorder == <span class="literal">null</span> || preorder.length == <span class="number">0</span> || inorder == <span class="literal">null</span> || inorder.length == <span class="number">0</span></span><br><span class="line">            || preorder.length != inorder.length) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">rootValue</span> <span class="operator">=</span> preorder[<span class="number">0</span>];</span><br><span class="line">    <span class="type">TreeNode</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNode</span>(rootValue);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (preorder.length == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">delimiterIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> number : inorder) {</span><br><span class="line">        <span class="keyword">if</span> (number == rootValue) {</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        delimiterIndex++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] leftInorder = Arrays.copyOfRange(inorder, <span class="number">0</span>, delimiterIndex);</span><br><span class="line">    <span class="type">int</span>[] rightInorder = Arrays.copyOfRange(inorder, delimiterIndex + <span class="number">1</span>, inorder.length);</span><br><span class="line">    <span class="type">int</span>[] leftPreorder = Arrays.copyOfRange(preorder, <span class="number">1</span>, delimiterIndex + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span>[] rightPreorder = Arrays.copyOfRange(preorder, delimiterIndex + <span class="number">1</span>, preorder.length);</span><br><span class="line"></span><br><span class="line">    root.leftChildNode = buildTree(leftPreorder, leftInorder);</span><br><span class="line">    root.rightChildNode = buildTree(rightPreorder, rightInorder);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>二叉树最核心的概念和操作基本就是这些，至于其它诸如合并、翻转、搜索、验证、最大……之类的问题，无非就是在遍历或构建的不同阶段实现不同的逻辑需求。所以，与其试图记住所有二叉树问题的答案，倒不如回过头来，找到二叉树概念的根，彻彻底底地吃透，从而任何问题都可以自己推导出解来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_binary_tree_basis.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;树是计算机编程当中很基础的一种数据结构，二叉树则是树中最基本的一种。虽然很多程序员在日常工作中未必会直接用到二叉树，但是对于这样一种基础的数</summary>
      
    
    
    
    <category term="编程" scheme="https://captnotes.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>N皇后问题</title>
    <link href="https://captnotes.github.io/n-queens-problem/"/>
    <id>https://captnotes.github.io/n-queens-problem/</id>
    <published>2021-12-07T02:26:25.000Z</published>
    <updated>2023-08-02T01:30:38.728Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_n_queens_problem.jpg" alt=""></p><p><a href="https://baike.baidu.com/item/%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/11053477">N 皇后问题</a>是比较典型的<a href="https://baike.baidu.com/item/%E5%9B%9E%E6%BA%AF%E6%B3%95">回溯法</a>问题，不过在回溯法中，解决 N 皇后问题算是有一些难度的了。</p><p>网上有很多该问题的解法，我这个虽然不是抄来的，性能也不算彪悍，但相比之下，我对“<a href="/">机长出品</a>”的可读性还是很有信心的。所以捞点儿干货贴在这里，以备将来查阅之需。</p><p>回溯法的本质是对<a href="https://baike.baidu.com/item/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86">树形结构的遍历</a>，一层一层递进，保留符合条件的节点。到达终点后，随着<a href="https://baike.baidu.com/item/%E9%80%92%E5%BD%92/1740695">递归</a>的一层层退出，抹掉上一次遍历时留下的痕迹，从而开始下一轮遍历。</p><p>回溯法一般都会结合递归来实现，递归可以简化多层嵌套<code>for</code>循环的场景。但写递归函数时一定要把子问题逻辑捋清楚，并确保退出条件生效。也就是说，每经过一次递归操作，退出条件中的变量一定要有所变化，否则就是递得进去，归不出来了。递归虽然能够简化多层嵌套循环，但并没有改变其本质，因此并不是说递归一定比<code>for</code>循环效率高，避免无效遍历是提升循环效率的一个主要套路。</p><p>在 N 皇后问题中，树的每个节点都代表一个 N×N 大小的棋盘，棋盘上记录了该节点所有直系父级节点里皇后所在的位置，而每个皇后所在的位置必须保证以该位置为中心点画出的“米”字每一笔延伸到棋盘边缘都不会经过另一个皇后。其实，琢磨透了这点儿区别，N 皇后问题和一般的用回溯法在一维数组里找组合的问题也就没多大差别了。</p><p>除了保证逻辑上正确，剩下主要就是优化。比如：皇后的位置是从上到下一行一行确定的，所以在判断对角线上是否存在其他皇后时，不需要检查“米”字下面那一撇一捺，因为此时下面的数据还没有生成，不会有皇后。</p><p>另外，别忘了每层递归完成时移除上次记录的数据。在这个问题中，还要记着抹掉上一行皇后占位的状态，否则下一轮递归到这一层时，残留的状态会让代码输出的结果“莫名其妙”。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">NQueensProlbem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span>[][] squareStates;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; <span class="title function_">solve</span><span class="params">(<span class="type">int</span> sideLength)</span> &#123;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; resultList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        squareStates = <span class="keyword">new</span> <span class="title class_">boolean</span>[sideLength][sideLength];</span><br><span class="line">        backtrack(resultList, sideLength, <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">backtrack</span><span class="params">(List&lt;List&lt;String&gt;&gt; resultList, <span class="type">int</span> sideLength, List&lt;String&gt; rowList, <span class="type">int</span> rowIndex,</span></span><br><span class="line"><span class="params">            <span class="type">int</span> columnIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowIndex == sideLength) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rowList.size() == sideLength) &#123;</span><br><span class="line">                resultList.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(rowList));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> columnIndex; index &lt; sideLength + columnIndex; index++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> (index + <span class="number">1</span>) % sideLength;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isSquareAvailable(rowIndex, offset)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">rowBuilder</span> <span class="operator">=</span> newRow(sideLength);</span><br><span class="line"></span><br><span class="line">            rowBuilder.setCharAt(offset, <span class="string">&#x27;Q&#x27;</span>);</span><br><span class="line">            squareStates[rowIndex][offset] = <span class="literal">true</span>;</span><br><span class="line">            rowList.add(rowBuilder.toString());</span><br><span class="line">            backtrack(resultList, sideLength, rowList, rowIndex + <span class="number">1</span>, offset);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!rowList.isEmpty()) &#123;</span><br><span class="line">                rowList.remove(rowList.size() - <span class="number">1</span>);</span><br><span class="line">                Arrays.fill(squareStates[rowIndex], <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isSquareAvailable</span><span class="params">(<span class="type">int</span> rowIndex, <span class="type">int</span> columnIndex)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowIndex &lt; <span class="number">0</span> || rowIndex &gt;= squareStates.length || columnIndex &lt; <span class="number">0</span> || columnIndex &gt;= squareStates.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sideLength</span> <span class="operator">=</span> squareStates.length;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Description: Both entire row and column must be available.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; index &lt; sideLength; index++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (squareStates[index][columnIndex] || squareStates[rowIndex][index]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Description: From the current row to the top one, check if every top left and</span></span><br><span class="line">        <span class="comment">// top right one is available.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; index &lt; rowIndex; index++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> rowIndex - index;</span><br><span class="line">            <span class="type">int</span> <span class="variable">leftSquareIndex</span> <span class="operator">=</span> columnIndex - offset;</span><br><span class="line">            <span class="type">int</span> <span class="variable">rightSquareIndex</span> <span class="operator">=</span> columnIndex + offset;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((leftSquareIndex &gt;= <span class="number">0</span> &amp;&amp; squareStates[index][leftSquareIndex])</span><br><span class="line">                    || (rightSquareIndex &lt; sideLength &amp;&amp; squareStates[index][rightSquareIndex])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> StringBuilder <span class="title function_">newRow</span><span class="params">(<span class="type">int</span> sideLength)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(sideLength);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">squareIndex</span> <span class="operator">=</span> <span class="number">0</span>; squareIndex &lt; sideLength; squareIndex++) &#123;</span><br><span class="line">            builder.append(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> builder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_n_queens_problem.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E5%85%AB%E7%9A%87%E5%90%8E%E9%97</summary>
      
    
    
    
    <category term="编程" scheme="https://captnotes.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>如何减小微信小程序代码包大小</title>
    <link href="https://captnotes.github.io/how-to-reduce-package-size-of-weapp/"/>
    <id>https://captnotes.github.io/how-to-reduce-package-size-of-weapp/</id>
    <published>2021-10-21T04:03:40.000Z</published>
    <updated>2023-08-01T16:18:22.402Z</updated>
    
    <content type="html"><![CDATA[<p><img src="../images/featured_how_to_reduce_package_size_of_weapp.jpg" alt=""></p><p>这两天被小程序代码包大小暴涨的问题困扰了挺久。简单说说怎么回事吧，就是之前好端端的微信小程序，最近配合新需求作了些改动，代码包大小突然翻了两倍多，从不到 2MB 一下子超过 5MB，超过了腾讯对小程序代码包大小不得超过 2MB 的限制，从而没法上传，也就没法真机调试，更不能发布了。</p><p>首先想到的是把所有图片资源都上传到文件服务器，腾出本地空间。但图片并不多，还用<a href="https://tinypng.com">TinyPNG</a>压缩过，心算都知道不可能超过 3MB。果然，即便移除了所有图片，代码包依然还有 4MB 多。</p><p>Google 一番，不少人都遇到过这个问题。网上给出的解决办法几乎清一色都是拆分代码包，虽然单个代码包不能超过 2MB，但通过拆分，总共不超过 20MB 就行。不是没想过拆，是感觉没这个必要，之前统计过，代码文件加一起也就 1.2MB，所以就没考虑过分包。既然众口一词都是教人如何分包，万一真是包治百病的济世良方呢，试试看，反正不要钱。</p><p>具体的分包策略和方式请参考<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/basic.html">官方文档</a>，这里懒得赘述。</p><p>半信半疑地分完包，主包还是超过 4MB。要不就是改成云函数，但毕竟不是只写了个<code>Hello World</code>，改动太大，暂不考虑。但是网上找不到别的招儿了，没办法，自己琢磨、另辟蹊径呗。</p><p>文本文件不可能那么大，图片又都被我挪走了，那么嫌疑最大就是第三方 SDK。我只引用了两个 SDK，这次并没增加，只是将其中一个的版本升了级。首先查了一下该 SDK 的 Bug 列表，没有相关问题反馈。那会不会是升级之后，老版本没有及时清理，从而也被算进去了呢？因此我用<code>npm uninstall</code>命令卸载了该 SDK，并重新构建了 NPM，然而效果如同蚍蜉撼树。</p><p>直觉告诉我，方向肯定没问题。问题具体出在哪儿呢？我开始打起微信开发者工具的算盘。</p><p><img src="../images/illustration_how_to_reduce_package_size_of_weapp_image_01.png" alt="代码包大小统计"></p><p>有什么办法可以看到代码包里具体的文件大小吗？长话短说，此处省去 N 千字。“详情”→“基本信息”里的“代码依赖分析”猛地蹦到我的视线里，让我立马想起 Android Studio 里的<code>Remove Unused Resources</code>——对呀，找找看有没有无效的引用。</p><p><img src="../images/illustration_how_to_reduce_package_size_of_weapp_image_02.jpg" alt="部分清理后的代码依赖分析结果"></p><p>分析结果不仅按照方块面积来可视化文件大小，还可以列出哪些文件是没有被依赖的。这就好比泄露的内存，都没人用了，还在那儿占着地方。根据分析结果，从大到小将无依赖的代码文件该删的删、该砍的砍，在不影响小程序正常运行的前提下将主代码包大小降到 2MB 以下不是什么难事。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;../images/featured_how_to_reduce_package_size_of_weapp.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这两天被小程序代码包大小暴涨的问题困扰了挺久。简单说说怎么回事吧，就是之前好端端的微信小程序，最近配合新</summary>
      
    
    
    
    <category term="编程" scheme="https://captnotes.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
  </entry>
  
</feed>
